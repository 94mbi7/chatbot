spring.application.name=spring
spring.datasource.url=jdbc:h2:mem:testdb
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=password

spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

spring.h2.console.enabled=true
spring.h2.console.path=/h2-console
spring.h2.console.settings.web-allow-others=false

server.port=400

logging.level.com.chatbot.spring=DEBUG
logging.level.org.springframework.web=DEBUG
logging.level.org.springframework.boot.autoconfigure=DEBUG

logging.level.org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping=DEBUG

logging.level.org.hibernate.SQL=DEBUG

spring.websocket.servlet.allowed-origins=*

app.name=Spring Boot Chatbot
app.version=@project.version@
app.description=A chatbot built with Spring Boot and Gradle


org.gradle.jvmargs=-Xmx2048m -XX:MaxPermSize=512m -XX:+HeapDumpOnOutOfMemoryError -Dfile.encoding=UTF-8
org.gradle.parallel=true
org.gradle.caching=true
org.gradle.daemon=true

springBootVersion=3.2.0
springDependencyManagementVersion=1.1.4

javaVersion=17

rootProject.name = 'chatbot'

dependencyResolutionManagement {
    versionCatalogs {
        libs {
            library('spring-boot-starter-web', 'org.springframework.boot', 'spring-boot-starter-web').withoutVersion()
            library('spring-boot-starter-websocket', 'org.springframework.boot', 'spring-boot-starter-websocket').withoutVersion()
            library('spring-boot-starter-data-jpa', 'org.springframework.boot', 'spring-boot-starter-data-jpa').withoutVersion()
            library('h2', 'com.h2database', 'h2').withoutVersion()
            library('spring-boot-starter-test', 'org.springframework.boot', 'spring-boot-starter-test').withoutVersion()
        }
    }
}